!function s(i,a,u){function c(t,e){if(!a[t]){if(!i[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(p)return p(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var o=a[t]={exports:{}};i[t][0].call(o.exports,function(e){return c(i[t][1][e]||e)},o,o.exports,s,i,a,u)}return a[t].exports}for(var p="function"==typeof require&&require,e=0;e<u.length;e++)c(u[e]);return c}({1:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function s(e){return i(e.split(","))}function i(e){if(2===e.length)return{lat:parseFloat(e[0]),lng:parseFloat(e[1])};throw"Could not transform array to coords, because wrong length..."}function a(e){return[e.lat,e.lng]}function u(e){return e.lat+","+e.lng}r.stringToCoords=s,r.arrayToCoords=i,r.coordsToArray=a,r.coordsToString=u,r.parseToCoords=function(e){{if("string"==typeof e)return s(e);if("object"===(void 0===e?"undefined":o(e))){if(Array.isArray(e))return i(e);var t=n({},e);return t.lat=parseFloat(t.lat),t.lng=parseFloat(t.lng),t}}},r.getCoordsAs=function(e,t){{if(t===String)return u(e);if(t===Array)return a(e);if(t===Object)return e;throw t+" is not supported as coordinate storage"}}},{}],2:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(r){r.prototype.$mapsection=new r({data:function(){return{fields:[],maps:[],updatingMaps:!1,updatingFields:!1}},methods:{getAcceptedType:function(e){var t=r.options.components["k-"+e.type+"-field"];return t?t.options.props.value.type:(console.warn('Mapsection could not update form: Unknown field type "'+this.fields[k].type+'"'),null)},updateFields:function(n,o,s){var i=this;this.updatingMaps||(this.updatingFields=!0,this.fields.forEach(function(e){if(o in e.fields){var t=i.getAcceptedType(e.fields[o]);if(!t)return;switch(n){case"center":e.values[o]=(0,a.getCoordsAs)(s,t);break;case"markers":var r=e.fields[o].fields;r&&r.coords?e.values[o]=s.map(function(e){if((e=Object.assign({},e)).coords){var t=i.getAcceptedType(r.coords);if(!t)return;e.coords=(0,a.getCoordsAs)(e.coords,t)}return e}):e.values[o]=s;break;default:e.values[o]=s}e.input(e.values)}}),this.$nextTick(function(){return i.updatingFields=!1}))},updateMaps:function(n){var e=this;this.updatingFields||(this.updatingMaps=!0,this.maps.forEach(function(e){for(var t in n){var r=n[t];e.setValue(t,r)}}),this.$nextTick(function(){return e.updatingMaps=!1}))},registerMap:function(e){this.maps.push(e)},unregisterMap:function(e){var t=this.fields.indexOf(e);-1!==t&&this.maps.splice(t,1)},registerFields:function(e){this.fields.push(e)},unregisterFields:function(e){var t=this.fields.indexOf(e);-1!==t&&this.fields.splice(t,1)}}});var t=r.options.components["k-fields-section"];r.component("k-fields-section",{extends:t,created:function(){this.$mapsection.registerFields(this)},destroyed:function(){this.$mapsection.unregisterFields(this)},methods:{input:function(e){this.values=e,t.options.methods.input.call(this,e),this.$mapsection.updateMaps(e)}},watch:{values:function(e){this.$mapsection.updateMaps(e)}}})};var a=e(1)},{1:1}],3:[function(n,e,i){!function(){"use strict";Object.defineProperty(i,"__esModule",{value:!0});var e,o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},s=n(1),t=n(5),r=(e=t)&&e.__esModule?e:{default:e};i.default={components:{mapComponent:window.MapSectionComponent||r.default},props:{parent:String,name:String,error:String},data:function(){return{config:null,storage:{},height:"medium",center:{lat:8,lng:32},zoom:void 0,markers:[]}},created:function(){var t=this;this.$api.get(this.parent+"/sections/"+this.name).then(function(e){t.config=e.config,t.height=e.height,t.storage=e.storage}),this.$mapsection.registerMap(this)},destroyed:function(){this.$mapsection.unregisterMap(this)},computed:{remheight:function(){switch(this.height){case"small":return"16rem";case"medium":return"24rem";case"large":return"32rem";case"huge":return"40rem";default:return this.height}}},methods:{setValue:function(e,t){if((!Array.isArray(t)||0!=t.length)&&t)try{for(var r in this.storage)if(this.storage[r]===e)switch(r){case"center":this.center=(0,s.parseToCoords)(t);break;case"zoom":var n=parseFloat(t);isNaN(n)?console.warn("could not adapt field to zoom datapoint, not a number: ",t):this.zoom=n;break;case"markers":if(!Array.isArray(t)){console.warn("could not adapt field to markers datapoint, not an array: ",t);break}this.markers=t.map(function(e){return o({},e,{coords:(0,s.parseToCoords)(e.coords)})});break;default:this[r]=t}}catch(e){console.warn(e)}},updateCenter:function(e){this.storage.center&&this.$mapsection.updateFields("center",this.storage.center,e)},updateZoom:function(e){this.storage.zoom&&this.$mapsection.updateFields("zoom",this.storage.zoom,e)},updateMarkers:function(e){this.storage.markers&&this.$mapsection.updateFields("markers",this.storage.markers,e)}}}}(),e.exports.__esModule&&(e.exports=e.exports.default);var t="function"==typeof e.exports?e.exports.options:e.exports;t.render=function(){var e=this,t=e.$createElement,r=e._self._c||t;return e.config?r("map-component",{style:{height:e.remheight},attrs:{center:e.center,zoom:e.zoom,markers:e.markers,config:e.config},on:{"update:center":e.updateCenter,"update:zoom":e.updateZoom,"update:markers":e.updateMarkers}}):e._e()},t.staticRenderFns=[]},{1:1,5:5}],4:[function(e,t,r){"use strict";var n=s(e(2)),o=s(e(3));function s(e){return e&&e.__esModule?e:{default:e}}panel.plugin("rasteiner/kn-map-section",{use:[n.default],sections:{map:o.default}})},{2:2,3:3}],5:[function(i,e,a){!function(){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e,t,r,n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o=i(6),s=(e=o)&&e.__esModule?e:{default:e};a.default={props:{center:Object,zoom:{type:Number,default:2},markers:Array,config:Object},data:function(){return{map:null,mapListeners:[],localMarkers:[]}},mounted:(t=regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,s.default)(this.config.key);case 2:this.map=new google.maps.Map(this.$refs.container,{zoom:this.zoom,center:this.center}),this.mapListeners.push(this.map.addListener("center_changed",this.onCenterChanged)),this.mapListeners.push(this.map.addListener("zoom_changed",this.onZoomChanged)),this.renderMarkers(this.markers);case 6:case"end":return e.stop()}},e,this)}),r=function(){var a=t.apply(this,arguments);return new Promise(function(s,i){return function t(e,r){try{var n=a[e](r),o=n.value}catch(e){return void i(e)}if(!n.done)return Promise.resolve(o).then(function(e){t("next",e)},function(e){t("throw",e)});s(o)}("next")})},function(){return r.apply(this,arguments)}),destroyed:function(){this.mapListeners.forEach(function(e){e.remove()}),this.mapListeners=[]},watch:{zoom:function(e){this.map&&this.map.setZoom(parseFloat(e))},center:function(e){this.map&&this.map.setCenter(e)},markers:{deep:!0,handler:function(e){this.map&&this.renderMarkers(e)}}},methods:{renderMarkers:function(e){var r=this;this.localMarkers.forEach(function(e){return e.gm.setMap(null)}),this.localMarkers=e.map(function(e){var t=new google.maps.Marker({position:e.coords,map:r.map,title:e.title,draggable:!0});return t.addListener("position_changed",r.onMarkersChanged),{gm:t,m:e}})},onCenterChanged:function(){this.$emit("update:center",{lat:this.map.getCenter().lat(),lng:this.map.getCenter().lng()})},onZoomChanged:function(){this.$emit("update:zoom",this.map.getZoom())},onMarkersChanged:function(){this.$emit("update:markers",this.localMarkers.map(function(e){return n({},e.m,{coords:{lat:e.gm.getPosition().lat(),lng:e.gm.getPosition().lng()}})}))}}}}(),e.exports.__esModule&&(e.exports=e.exports.default);var t="function"==typeof e.exports?e.exports.options:e.exports;t.render=function(){var e=this.$createElement;return(this._self._c||e)("div",{ref:"container",staticClass:"mapscontainer"})},t.staticRenderFns=[]},{6:6}],6:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var i=!(r.default=function(e){var r={};if(a)return new Promise(function(e){return e()});if(!i){i=!0;var t=document.createElement("script"),n="rasteinermapssectionloader",o={key:e,callback:n},s="https://maps.googleapis.com/maps/api/js?"+Object.keys(o).map(function(e){return encodeURIComponent(e)+"="+encodeURIComponent(o[e])}).join("&");t.setAttribute("src",s),t.setAttribute("async",""),t.setAttribute("defer",""),document.head.appendChild(t),window[n]=function(){var e=a=!0,t=!1,r=void 0;try{for(var n,o=u[Symbol.iterator]();!(e=(n=o.next()).done);e=!0){var s=n.value;s.resolve()}}catch(e){t=!0,r=e}finally{try{!e&&o.return&&o.return()}finally{if(t)throw r}}},t.addEventListener("error",function(e){var t=!0,r=!1,n=void 0;try{for(var o,s=u[Symbol.iterator]();!(t=(o=s.next()).done);t=!0){var i=o.value;i.reject(e)}}catch(e){r=!0,n=e}finally{try{!t&&s.return&&s.return()}finally{if(r)throw n}}})}return u.push(r),new Promise(function(e,t){r.resolve=e,r.reject=t})}),a=!1,u=[]},{}]},{},[4]);
